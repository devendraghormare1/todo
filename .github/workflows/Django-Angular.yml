name: Django-Angular CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: sudo apt-get update && sudo apt-get install -y gcc

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run backend tests
      env:
        DJANGO_SETTINGS_MODULE: backend.settings
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      run: |
        python backend/manage.py migrate
        python backend/manage.py test

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install frontend dependencies
      working-directory: sample
      run: npm install

    - name: Run frontend tests
      working-directory: sample
      run: npm run test -- --watch=false

  build-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build backend
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        python backend/manage.py collectstatic --no-input

    - name: Build frontend
      working-directory: sample
      run: npm run build -- --prod

    # Additional deployment steps (e.g., pushing to a server or cloud) can be added here
